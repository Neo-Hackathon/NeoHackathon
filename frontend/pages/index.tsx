import Head from 'next/head'
import { Inter } from 'next/font/google'
import styles from '@/styles/Home.module.css'
import { useState, useEffect } from "react";
import { Web3 } from "web3";

const inter = Inter({ subsets: ['latin'] })

export default function Home() {
  const [account, setAccount] = useState("");
  const [balance, setBalance] = useState("");
  let accounts:any;
  const test = new Web3("https://evm.ngd.network:32332");

  useEffect(() => {
    const ConnectMetaMask = async () => {
      try {
          window.ethereum.enable().then(async () => {
          const web3 = new Web3(window.ethereum);
          accounts = await web3.eth.getAccounts();
          setAccount(accounts[0]);
        });
      } catch (error) {

      }
    };
    ConnectMetaMask();
  }, []);

  const mint = async () => {
    const a = await test.eth.abi.encodeFunctionCall({
      name: 'safeMint',
      type: 'function',
      inputs: [{
          internalType: "address",
          type: 'address',
          name: 'to'
      },{
        internalType: "uint256",
        type: 'uint256',
        name: 'tokenId'
    }]
    }, [account,2]);
    console.log("a "+a);
    const c = await test.eth.sendTransaction({
        from: account,
        to: '0x1968129459a41f38dfbb2771b19e4925a394a1e0',
        data: a
    });
    console.log("c "+c);
    

    // const a = await web3.eth.abi.encodeFunctionCall({
    //   name: 'tokenURI',
    //   type: 'function',
    //   inputs: [{
    //       internalType: "uint256",
    //       type: 'uint256',
    //       name: 'tokenId'
    //   }]
    // }, [0]);
    // console.log("a "+a);
    // const c = await web3.eth.call({
    //     to: "0x1968129459a41f38dfbb2771b19e4925a394a1e0", // contract address
    //     data: a
    // })
    // console.log("c "+c);
    // const b = await web3.eth.abi.decodeParameter('string',c);
    // console.log("b "+b);
  };

  const balanceOf = async () => {
    try {
      let d = await test.eth.abi.encodeFunctionCall({
        name: 'balanceOf',
        type: 'function',
        inputs: [{
            internalType: "address",
            type: 'address',
            name: 'owner'
        }]
      }, [account]);
      let e = await test.eth.call({
          to: "0x1968129459a41f38dfbb2771b19e4925a394a1e0",
          data: d
      });
      setBalance(e);
    } catch (e) {
      console.log(e);
    }
  }

  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={`${styles.main} ${inter.className}`}>
      <div className="p-4">
        {!account ? (
          <button onClick={() => window.ethereum.enable()}>
            Connect to MetaMask
          </button>
        ) : null}
        {account ? (
          <>
            <button onClick={mint}>
              mint
            </button>
            <button onClick={balanceOf}>
              balanceOf
            </button>
            <p>Your account address: {account} / NFT Balance: {balance}</p>
          </>
        ) : null}
        </div>
      </main>
    </>
  )
}
